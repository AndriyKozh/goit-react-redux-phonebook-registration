{"version":3,"file":"static/js/542.ee0a9dfb.chunk.js","mappings":"6PAWaA,GATeC,EAAAA,GAAAA,IAAH,4KASFA,EAAAA,GAAAA,IAAH,4KAUPC,EAAeD,EAAAA,GAAAA,GAAH,uN,+GClBZE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6RAgBRI,EAAQJ,EAAAA,GAAAA,MAAH,iKASLK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6MASVO,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,yLAOTS,EAAST,EAAAA,GAAAA,OAAH,ggB,uCChCbU,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAIzCC,EAASC,EAAAA,KAAaC,MAAM,CAC9BJ,MAAOG,EAAAA,KAAaH,MAJH,4BAIqBK,SAAS,qBAC/CJ,SAAUE,EAAAA,KAEPG,IAAI,EANa,4CAOjBD,SAAS,2BAGDE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,CACEV,cAAeA,EACfW,SAPiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,GAASK,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAKGE,iBAAkBZ,EAHpB,UAKE,UAACX,EAAD,CAAUwB,aAAa,MAAvB,WACE,SAACtB,EAAD,WACE,SAACC,EAAD,CAAYsB,KAAK,QAAQC,KAAK,QAAQC,YAAY,aAEpD,SAACtB,EAAD,CAAWqB,KAAK,QAAQE,UAAU,OAClC,SAAC1B,EAAD,WACE,SAACC,EAAD,CAAYsB,KAAK,WAAWC,KAAK,WAAWC,YAAY,gBAE1D,SAACtB,EAAD,CAAWqB,KAAK,WAAWE,UAAU,OACrC,SAACrB,EAAD,CAAQkB,KAAK,SAAb,wBAIP,E,UC9Cc,SAASI,IACpB,OAAO,4BACC,SAAC,KAAD,qBACA,SAACb,EAAD,MAEX,C","sources":["components/General.styled.js","components/loginForm/LoginForm.styled.js","components/loginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhonebokCont = styled.div`\n  padding: 40px;\n  padding-top: 0;\n  margin: 20px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  color: #010101;\n`;\nexport const Contact = styled.div`\n  position: absolute;\n  width: 90%;\n  max-height: 34%;\n\n  left: 50%;\n  top: 83%;\n  transform: translate(-50%, -50%);\n  overflow-y: scroll;\n`;\nexport const SectionTitle = styled.h2`\n  position: absolute;\n  top: 25%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: normal;\n  font-size: 40px;\n  margin: 20px 0 20px 0;\n  width: 100%;\n`;\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const MainForm = styled(Form)`\n  display: flex;\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%);\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 75%;\n  padding: 0 20px 0 20px;\n  width: 89%;\n\n  border-radius: 4px;\n`;\n\nexport const Lable = styled.label`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: transparent;\n`;\n\nexport const InputField = styled(Field)`\n  width: 105%;\n  height: 30px;\n  border: transparent;\n  padding: 4px 10px 4px 10px;\n\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n`;\nexport const ErrorMess = styled(ErrorMessage)`\n  margin: 5px;\n  color: #f45707;\n  font-style: italic;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: left;\n`;\nexport const Button = styled.button`\n  padding: 5px 10px 5px 10px;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: large;\n\n  width: 120px;\n  border: none;\n  border-radius: 10px;\n  box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px,\n    rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;\n  &:hover,\n  :focus {\n    background-color: #2a404e;\n    color: #fafaf8;\n    transition: all 300ms ease;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  MainForm,\n  Lable,\n  InputField,\n  ErrorMess,\n  Button,\n} from './LoginForm.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operation';\n\nconst initialValues = { email: '', password: '' };\nconst EmailAlert = 'Please enter valid email';\nconst PasswordAlert = 'Password should be at least 6 characters';\n\nlet schema = yup.object().shape({\n  email: yup.string().email(EmailAlert).required('Email is required'),\n  password: yup\n    .string()\n    .min(6, PasswordAlert)\n    .required('Password is requaired'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <MainForm autoComplete=\"off\">\n        <Lable>\n          <InputField type=\"email\" name=\"email\" placeholder=\"Email\" />\n        </Lable>\n        <ErrorMess name=\"email\" component=\"p\" />\n        <Lable>\n          <InputField type=\"password\" name=\"password\" placeholder=\"Password\" />\n        </Lable>\n        <ErrorMess name=\"password\" component=\"p\" />\n        <Button type=\"submit\">Log In</Button>\n      </MainForm>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/loginForm/LoginForm';\nimport { SectionTitle } from 'components/General.styled';\n\nexport default function Login() {\n    return <div>\n            <SectionTitle>Login</SectionTitle>\n            <LoginForm/>\n            </div>;\n}"],"names":["Contact","styled","SectionTitle","MainForm","Form","Lable","InputField","Field","ErrorMess","ErrorMessage","Button","initialValues","email","password","schema","yup","shape","required","min","LoginForm","dispatch","useDispatch","onSubmit","values","resetForm","logIn","validationSchema","autoComplete","type","name","placeholder","component","Login"],"sourceRoot":""}